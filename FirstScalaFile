import java.io.BufferedReader
import java.io.FileNotFoundException
import java.io.FileReader
import java.io.IOException

//remove if not needed
import scala.collection.JavaConversions._

object CsvFileReaderExample {

  def main(args: Array[String]): Unit = {
    if (args.length != 2) {
      System.err.println("Please specify input and output file names")
      System.exit(-1)
    }
    val input: String = args(0)
    val output: String = args(1)
    val csvFile: String = "/home/cloudera/Desktop/kafka/DR/comment/" + input
    var br: BufferedReader = null
    var line: String = ""
    try {
      br = new BufferedReader(new FileReader(csvFile))
      var n: Int = 0
      while ((line = br.readLine()) != null) if (line.trim().length == 0) {
        println(line.trim().length)
        n = n + 1
        println("Line No : " + n)
        val text: String = line
        println("Text" + text)
        val obj: CsvFileReaderExample = new CsvFileReaderExample()
        obj.sentimentResult(n, text, output)
      } else {
        val splChrs: String = "-./@#$%^&_+=()"
        val found: Boolean = line.matches("[" + splChrs + "]+")
        println("value of found:" + found)
        if (found == true) {
          n = n + 1
          println("Line No : " + n)
          val text: String = line
          println("Text" + text)
          val obj: CsvFileReaderExample = new CsvFileReaderExample()
          obj.sentimentResult(n, text, output)
        } else {
          n = n + 1
          println("Line No : " + n)
          val text: String = line
          println("Text" + text)
          val obj: CsvFileReaderExample = new CsvFileReaderExample()
          obj.sentimentResult(n, text, output)
        }
      }
    } catch {
      case e: FileNotFoundException => e.printStackTrace()

      case e: IOException => e.printStackTrace()

    } finally if (br != null) {
      try br.close()
      catch {
        case e: IOException => e.printStackTrace()

      }
    }
  }

}
